plugins {
    id 'java'
    id 'org.springframework.boot' apply false
    id 'io.spring.dependency-management'
    id 'org.asciidoctor.jvm.convert' apply false
}

java {
    sourceCompatibility = '17'
}

def projectGroup = 'project'
def applicationVersion = 'project'
allprojects {
    group = projectGroup
    version = applicationVersion

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "org.asciidoctor.jvm.convert"

    ext {
        set('snippetsDir', file("build/generated-snippets"))
        set('testcontainersVersion', "1.18.3")
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        asciidoctorExt
    }

    dependencyManagement {
        def springCloudDependenciesVersion = 'project'
        imports {
            mavenBom("org.springframework.cloud:spring-cloud-dependencies:${springCloudDependenciesVersion}")
        }
    }

    dependencies {
        // web
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        // dev
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // db
        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'com.mysql:mysql-connector-j'

        // test
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'io.rest-assured:rest-assured'

        // test containers
        testImplementation 'org.testcontainers:junit-jupiter'
        testImplementation 'org.testcontainers:mysql'

        // api docs
        testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
        asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    }

    dependencyManagement {
        imports {
            mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
        }
    }

    tasks.getByName("bootJar") {
        enabled = false
    }

    tasks.getByName("jar") {
        enabled = true
    }

    tasks.named('test') {
        outputs.dir snippetsDir
        useJUnitPlatform()
    }

    tasks.named('asciidoctor') {
        inputs.dir snippetsDir
        dependsOn test
        configurations 'asciidoctorExt'

        sources {
            include '**/index.adoc'
        }

        baseDirFollowsSourceFile()
    }

    asciidoctor.doFirst {
        delete file("${project.rootDir}/src/main/resources/static/docs")
    }

    task copyDocument(type: Copy) {
        dependsOn asciidoctor

        from "${project.buildDir}/docs/asciidoc"
        into "${project.rootDir}/src/main/resources/static/docs"
    }

    build {
        dependsOn copyDocument
    }

//    jar {
//        enabled = false
//    }

//    bootJar {
//        archiveFileName="kkeuroolryo-donggi.jar"
//    }

}
